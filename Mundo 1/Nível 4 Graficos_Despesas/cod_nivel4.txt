from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import numpy as np

class Grafico:
  def __init__(self, lista_despesas):
    self.lista_despesas=lista_despesas
    self.imprimir_graficos()

  def padrao_do_grafico(self):
    plt.xlabel('Dias')
    plt.ylabel('Gasto em R$')
    plt.title('Gráficos de Despesas')

  def imprimir_graficos(self):
    self.padrao_do_grafico()
    for gastos in self.lista_despesas:
      mLista= gastos.dicionario.items()
      cor= gastos.cor
      nome= gastos.nome
      x, y= zip(*mLista)
      plt.plot(x, y, label = nome, marker='o',
               markerfacecolor='blue',
               markersize=10,
               color=cor,
               linewidth=5)
    plt.legend()
    plt.show()

  def regressao_linear(self, id_grafico):
    gastos= self.lista_despesas[id_grafico]
    mLista= gastos.dicionario.items()
    cor= gastos.cor
    nome= gastos.nome
    dias, valores= zip(*mLista)
    dias= np.array(dias)
    valores= np.array(valores)
    dias= dias.reshape(-1, 1)
    valores= valores.reshape(-1, 1)
    regressao= LinearRegression()
    regressao.fit(X=dias, y=valores)
    plt.plot(dias, regressao.predict(dias),
             color='blue',
             label = "Regressão Linear")

    x, y= zip(*mLista)
    plt.plot(x, y, label= nome+str(" - original"),
             marker='o',
             markerfacecolor='olive',
             markersize=10,
             color=cor,
             linewidth=5)

    plt.legend()
    plt.show()

class Demonstrar:

    def __init__(self, dicionario, cor, nome):
        self.dicionario= dicionario
        self.cor=cor
        self.nome= nome

a= Demonstrar({1:100, 2:000, 3:000, 4:150, 5:000},'skyblue','Alimentação')
v= Demonstrar({1:10, 2:30, 3:50, 4:000, 5:30},'red','Vestúario')
t= Demonstrar({1:000, 2:000, 3:100, 4:300, 5:50},'olive','Transporte')

lista_despesas = [a, t, v]
grafico= Grafico(lista_despesas)

id_despesa= 0# id da despesa
grafico.regressao_linear(id_despesa)